# Nginx configuration

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name ${NGINX_HOST};
    return 301 https://${NGINX_HOST}$request_uri;
    root /var/www/html;
    index index.html index.htm index.php;
    charset utf-8;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
 
    access_log off;
    error_log  /var/log/nginx/example-site.com-error.log error;

    sendfile off;
    keepalive_timeout 1000; #default 655

    #client_max_body_size 100m;
    # Remove X-Powered-By, which is an information leak
    fastcgi_hide_header X-Powered-By;
    
    location ~* \.(eot|ttf|woff|woff2)$ {
        add_header Access-Control-Allow-Origin *;
    }
    location ~ .(aspx|python|ruby|jsp|cgi)$ {
        return 410;
    }


     location ~ \.php$ {
         try_files $uri =404;
         fastcgi_split_path_info ^(.+\.php)(/.+)$;
         fastcgi_pass php:9000;
         fastcgi_index index.php;
         include fastcgi_params;
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
         fastcgi_param PATH_INFO $fastcgi_path_info;
     }

    location ~ /\.ht {
        deny all;
    }
    set $skip_cache 0;

if ($request_method = POST) {
    set $skip_cache 1;
}

if ($query_string != "") {
    set $skip_cache 1;
}

if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
        set $skip_cache 1;
    }

if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
    set $skip_cache 1;
}

if ($http_cookie ~* "PHPSESSID"){
    set $skip_cache 1;
}

rewrite /wp-admin$ $scheme://$host$uri/ permanent;
#rewrite /webadmindo$ $scheme://$host$uri/ permanent;
rewrite /wp-content/cache/$2/$1.$2 break;

 location / {
        try_files $uri $uri/ //index.php?$args;

        if ($http_origin ~ '^http?://(localhost)') {
            set $cors "true";
        }

        if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
        }

        if ($request_method = 'GET') {
            set $cors "${cors}get";
        }
        if ($request_method = 'POST') {
            set $cors "${cors}post";
        }

        if ($cors = "trueget") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "truepost") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "trueoptions") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }
    }
}

#enable ssl
server {
     server_name ${NGINX_HOST};

     listen 443 ssl http2;
     fastcgi_param HTTPS on;

     ssl_certificate /etc/ssl/server.pem;
     ssl_certificate_key /etc/ssl/server.key;
     ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;

     index index.html index.htm index.php index.py;
     error_log  /var/log/nginx/error.log;
     access_log /var/log/nginx/access.log;
     root /var/www/html;

     location ~ \.php$ {
         try_files $uri =404;
         fastcgi_split_path_info ^(.+\.php)(/.+)$;
         fastcgi_pass iva_php_1:9000;
         fastcgi_index index.php;
         include fastcgi_params;
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
         fastcgi_param PATH_INFO $fastcgi_path_info;
     }
 }
